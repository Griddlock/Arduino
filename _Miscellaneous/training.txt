Introduction to Arduino
- why use Arduino (cheap, easy, small, versatile)
- what it is (show the board, tiny microcontroller)
- what it can be used for (controlling lights, motors, speakers, anything electric)
	- using them in cosplay enhances your costume dramatically
- digital and analog pins (output high/low, analog read)
- use on a breadboard (for development)


Programming
- how to install the develpment environment
- how to start a new project
- how to connect the arduino board (USB)
- how to select the correct port (before and after plugging in, to help identify port)
- compile (translate into the native language of the board) and upload
	- blank program does nothing, but the environment is ready to work with.


Programming basics
- variables, what they are
- some variable types (int & boolean)
- if blocks (decision making)
- commands to set up serial output (for beginner programming)
- manipulating variables (math functions, mainly)
- serial output, delay()
- test program on an actualy board to show that serial output works (hello world program)


Electronics primer
- electricity is expressed as going from positive to negative
- volts and amps (pressure and volume)
- what a short is, and why it is bad (high amps burn out stuff)
- what high and low mean (5v and 0v)
- the fact that a disconnected pin may give random input
- pull-down resistor to force low
- switch connected to Vcc, gives definite high and low as input


Board basics
- pinMode setup
- manipulating the pin output with digitalWrite()
- using variables to make the pin alternate every second
- set up circuit with LED and button (with pull down resistor)
- LED flashes only while button is held down


Functions
- For doing complex processes multiple times with slightly varying input
- For organizing your code better
- build a function that flashes the LED a specified number of times after button is pressed
- for further commands/functions, refer to the Arduino reference guide online


Analog output, Pulse wave modulation
- outputs high and low rapidly to simulate lower current, effectively dimming LEDs
- make the LED glow on and off regularly when button pressed
- only on pins 3,5,6,9,10,11

Analog input
- only on pins A0 - A7
- resistor voltage divider (2 x 5K), with seiral output
- joystick hookup and reading (2 pins), with serial output

The real-time loop
- concept that a process can be done bits at a time, allowing the loop to continue between delays
- show the standard real time loop structure
- blink an LED once per second for 1/5 of a second (on delay = mil + 1000, off delay = mil + 200)
- blink another LED at a random rate
- explain that many more processes can be added without interrupting the ones already there

Debouncing
- Why buttons need debouncing
- how to do it in the real-time loop (debounce on down, debounce on up, trigger action)

Coding for Cosplay (usable programs)
- fire glow (red and yellow LEDs, random analog values, fast flickering)
- lightning (multiple blue/white lines, extreme rapid flashing)
- slow glow (green and blue slow irregular glowing to random brightnesses, slow glow on and off with button press)
- home-made stepper motor controller (tracking position for self-limiting, controlled by joystick)
- using premade components:
	- h-bridge
	- mp3 player (and amplifiers)
	- 
